// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String   @id @default(cuid())
  first_name String
  last_name  String
  password   String   @unique
  email      String   @unique
  clients    Client[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map(name: "users")
}

model Client {
  id                         String      @id @default(cuid())
  secret                     String?     @unique @default(cuid())
  name                       String
  description                String
  type                       ClientType? @default(web)
  token_endpoint_auth_method String?     @default("client_secret_basic")
  contacts                   String[]
  grant_types                String[]
  response_types             String[]
  redirect_uris              String[]
  logo_uri                   String?
  website_uri                String?
  policy_uri                 String?
  tos_uri                    String?
  user_id                    String?
  created_at                 DateTime    @default(now())
  updated_at                 DateTime    @updatedAt

  User               User?               @relation(fields: [user_id], references: [id])
  AuhtorizationCodes AuhtorizationCode[]
  Scopes             Scope[]
  AccessTokens       AccessToken[]
  RefreshTokens      RefreshToken[]

  @@map(name: "clients")
}

model AuhtorizationCode {
  id                    String             @id @default(cuid())
  client_id             String
  code                  String             @default(cuid())
  code_challenge        String
  code_challenge_method CodeChallegeMethod @default(plain)

  Client Client @relation(fields: [client_id], references: [id])

  @@map(name: "authorization_codes")
}

model AccessToken {
  id        String @id @default(cuid())
  client_id String
  token     String @default(cuid())

  Client Client @relation(fields: [client_id], references: [id])

  @@map(name: "access_tokens")
}

model RefreshToken {
  id        String @id @default(cuid())
  client_id String
  token     String @default(cuid())

  Client Client @relation(fields: [client_id], references: [id])

  @@map(name: "refresh_tokens")
}

model Scope {
  id          String   @id @default(cuid())
  name        String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  Client Client[]

  @@map(name: "scopes")
}

enum ClientType {
  web
  browser
  ios
  android
}

enum CodeChallegeMethod {
  plain
  S256
}
